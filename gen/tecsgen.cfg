#include "cb_type_only.h"
#include "tTask_tecsgen.h"
CRE_TSK(TSKID_tTask_ConnectBluetoothTask, { TA_ACT, &tTask_CB_tab[0], tTask_start_task, 2, 512, NULL });
DEF_TEX(TSKID_tTask_ConnectBluetoothTask, { TA_NULL, tTask_start_exception });
CRE_TSK(TSKID_tTask_StarterTask, { TA_ACT, &tTask_CB_tab[1], tTask_start_task, 6, 1024, NULL });
DEF_TEX(TSKID_tTask_StarterTask, { TA_NULL, tTask_start_exception });
CRE_TSK(TSKID_tTask_GetCommandTask, { TA_ACT, &tTask_CB_tab[2], tTask_start_task, 5, 1024, NULL });
DEF_TEX(TSKID_tTask_GetCommandTask, { TA_NULL, tTask_start_exception });
CRE_TSK(TSKID_tTask_LogTask_Task, { TA_ACT, &tTask_CB_tab[3], tTask_start_task, 3, 512, NULL });
DEF_TEX(TSKID_tTask_LogTask_Task, { TA_NULL, tTask_start_exception });
CRE_TSK(TSKID_tTask_TailControllerTask_Task, { TA_NULL, &tTask_CB_tab[4], tTask_start_task, 5, 512, NULL });
DEF_TEX(TSKID_tTask_TailControllerTask_Task, { TA_NULL, tTask_start_exception });
CRE_TSK(TSKID_tTask_BalancerTask_Task, { TA_NULL, &tTask_CB_tab[5], tTask_start_task, 1, 1024, NULL });
DEF_TEX(TSKID_tTask_BalancerTask_Task, { TA_NULL, tTask_start_exception });
CRE_TSK(TSKID_tTask_LinetracerTask_Task, { TA_NULL, &tTask_CB_tab[6], tTask_start_task, 4, 512, NULL });
DEF_TEX(TSKID_tTask_LinetracerTask_Task, { TA_NULL, tTask_start_exception });
CRE_TSK(TSKID_tTask_GetLogTask_Task, { TA_NULL, &tTask_CB_tab[7], tTask_start_task, 6, 1024, NULL });
DEF_TEX(TSKID_tTask_GetLogTask_Task, { TA_NULL, tTask_start_exception });
#include "tInitializeRoutine_tecsgen.h"
ATT_INI({ TA_NULL, &tInitializeRoutine_CB_tab[0], tInitializeRoutine_start });
ATT_INI({ TA_NULL, &tInitializeRoutine_CB_tab[1], tInitializeRoutine_start });
ATT_INI({ TA_NULL, &tInitializeRoutine_CB_tab[2], tInitializeRoutine_start });
ATT_INI({ TA_NULL, &tInitializeRoutine_CB_tab[3], tInitializeRoutine_start });
ATT_INI({ TA_NULL, &tInitializeRoutine_CB_tab[4], tInitializeRoutine_start });
ATT_INI({ TA_NULL, &tInitializeRoutine_CB_tab[5], tInitializeRoutine_start });
ATT_INI({ TA_NULL, &tInitializeRoutine_CB_tab[6], tInitializeRoutine_start });
ATT_INI({ TA_NULL, &tInitializeRoutine_CB_tab[7], tInitializeRoutine_start });
#include "tTerminateRoutine_tecsgen.h"
ATT_TER({ TA_NULL, &tTerminateRoutine_CB_tab[0], tTerminateRoutine_start });
ATT_TER({ TA_NULL, &tTerminateRoutine_CB_tab[1], tTerminateRoutine_start });
ATT_TER({ TA_NULL, &tTerminateRoutine_CB_tab[2], tTerminateRoutine_start });
ATT_TER({ TA_NULL, &tTerminateRoutine_CB_tab[3], tTerminateRoutine_start });
ATT_TER({ TA_NULL, &tTerminateRoutine_CB_tab[4], tTerminateRoutine_start });
ATT_TER({ TA_NULL, &tTerminateRoutine_CB_tab[5], tTerminateRoutine_start });
ATT_TER({ TA_NULL, &tTerminateRoutine_CB_tab[6], tTerminateRoutine_start });
#include "tISR_tecsgen.h"
ATT_ISR({ TA_NULL, &tISR_CB_tab[0], INTNO_TWI_PID, tISR_start, 1 });
ATT_ISR({ TA_NULL, &tISR_CB_tab[1], 7, tISR_start, 1 });
ATT_ISR({ TA_NULL, &tISR_CB_tab[2], INTNO_TC0_PID, tISR_start, 1 });
ATT_ISR({ TA_NULL, &tISR_CB_tab[3], INTNO_PIOA_PID, tISR_start, 1 });
ATT_ISR({ TA_NULL, &tISR_CB_tab[4], INTNO_SPI_PID, tISR_start, 1 });
ATT_ISR({ TA_NULL, &tISR_CB_tab[5], INTNO_SSC_PID, tISR_start, 1 });
CFG_INT( INTNO_TWI_PID,{ (TA_ENAINT | TA_LOWLEVEL), -5});
CFG_INT( 7,{ TA_NULL, -2});
CFG_INT( INTNO_TC0_PID,{ (TA_ENAINT | TA_LOWLEVEL), -4});
CFG_INT( INTNO_PIOA_PID,{ (TA_ENAINT | TA_LOWLEVEL), -4});
CFG_INT( INTNO_SPI_PID,{ (TA_ENAINT | TA_LOWLEVEL), -4});
CFG_INT( INTNO_SSC_PID,{ (TA_ENAINT | TA_EDGE), -1});
#include "tCyclicHandler_tecsgen.h"
CRE_CYC( CYCHDLRID_tCyclicHandler_CheckNXTButton, { TA_STA, &tCyclicHandler_CB_tab[0], tCyclicHandler_start, 10, 1 } );
CRE_CYC( CYCHDLRID_tCyclicHandler_AVR_CyclicAVR, { TA_STA, &tCyclicHandler_CB_tab[1], tCyclicHandler_start, 2, 1 } );
CRE_CYC( CYCHDLRID_tCyclicHandler_Button_ButtonUpdate, { TA_STA, &tCyclicHandler_CB_tab[2], tCyclicHandler_start, 10, 1 } );
CRE_CYC( CYCHDLRID_tCyclicHandler_RotaryEncoder_CyclicMotor, { TA_STA, &tCyclicHandler_CB_tab[3], tCyclicHandler_start, 1, 1 } );
CRE_CYC( CYCHDLRID_tCyclicHandler_TailControllerTask_CyclicHandler, { TA_NULL, &tCyclicHandler_CB_tab[4], tCyclicHandler_start, 4, 1 } );
CRE_CYC( CYCHDLRID_tCyclicHandler_BalancerTask_CyclicHandler, { TA_NULL, &tCyclicHandler_CB_tab[5], tCyclicHandler_start, 4, 1 } );
CRE_CYC( CYCHDLRID_tCyclicHandler_LinetracerTask_CyclicHandler, { TA_NULL, &tCyclicHandler_CB_tab[6], tCyclicHandler_start, 10, 1 } );
CRE_CYC( CYCHDLRID_tCyclicHandler_GetLogTask_CyclicHandler, { TA_NULL, &tCyclicHandler_CB_tab[7], tCyclicHandler_start, 20, 1 } );
#include "tAlarmHandler_tecsgen.h"
CRE_ALM(ALMHDLRID_tAlarmHandler_Bluetooth_AlarmTimeOut, { TA_NULL, &tAlarmHandler_CB_tab[0], tAlarmHandler_start});
CRE_SEM(SEMID_tSemaphore_BluetoothSemapohre, { TA_TPRI, 0, 1 });
CRE_SEM(SEMID_tSemaphore_StartSemaphore, { TA_NULL, 0, 1 });
CRE_SEM(SEMID_tSemaphore_SerialPort1_ReceiveSemaphore, { TA_NULL, 0, 1 });
CRE_SEM(SEMID_tSemaphore_SerialPort1_SendSemaphore, { TA_NULL, 1, 1 });
#include "target_at91sam7s.h"
#include "syssvc/tLogTask.h"
ATT_TER({ TA_NULL, 0, tLogTask_terminate });
