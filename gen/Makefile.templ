# このファイルは tecsgen により自動生成されました
# Makefile.temp は gen の一つ上のディレクトリに移して使用します
#  % mv Makefile.temp Makefile
# 
# clean のデフォルト動作は $(GEN_DIR)/Makefile.* を削除します
#
# このファイルは GNU make で gcc を用い POSIX 環境で動作するモジュールをビルドするのに適切なように生成されています
# vpath, CFLAGS, OTHER_OBJS などを調整する必要があるかもしれません
# 他の環境やターゲットの場合、このファイルを元に変更する必要があります

# 変数 #_MVAR_#
TARGET = tSample.exe
TIMESTAMP = tecsgen.timestamp
TECSGEN_EXE = tecsgen
BASE_DIR = .
CC = gcc
CFLAGS = -I $(BASE_DIR)/. -I $(BASE_DIR)/. -I $(BASE_DIR)/./gen -I $(BASE_DIR)/../../tecs_kernel -I $(BASE_DIR)/../../include -I $(BASE_DIR)/../../arch -I $(BASE_DIR)/../.. -I $(BASE_DIR)/../../kernel -I $(BASE_DIR)/../../target/mindstorms_nxt_gcc -I $(BASE_DIR)/../../tecs_lib/mindstorms_nxt -I $(BASE_DIR)/../../arch/arm_gcc/common -I $(GEN_DIR) -D TECS -D TECS_CPP -D "Inline=static inline"
LD = gcc
LDFLAGS = 
GEN_DIR = $(BASE_DIR)/gen
SRC_DIR = $(BASE_DIR)/src
_TECS_OBJ_DIR = $(GEN_DIR)/
#   _TECS_OBJ_DIR   # should be end with '/'

vpath %.c $(SRC_DIR) $(GEN_DIR)  ./gen ../../tecs_kernel ../../include ../../arch ../.. ../../kernel ../../target/mindstorms_nxt_gcc ../../tecs_lib/mindstorms_nxt ../../arch/arm_gcc/common
vpath %.h $(SRC_DIR) $(GEN_DIR)  ./gen ../../tecs_kernel ../../include ../../arch ../.. ../../kernel ../../target/mindstorms_nxt_gcc ../../tecs_lib/mindstorms_nxt ../../arch/arm_gcc/common

OTHER_OBJS =                       # Add objects out of tecs care.
# OTHER_OBJS = $(_TECS_OBJ_DIR)vasyslog.o

# ルール #_MRUL_#
allall: tecs
	make all     # in order to include generated Makefile.tecsgen & Makefile.depend

all : $(TARGET)


# depend を include #_MDEP_#
-include $(GEN_DIR)/Makefile.tecsgen
-include $(GEN_DIR)/Makefile.depend

$(TARGET) : $(TIMESTAMP) $(CELLTYPE_COBJS) $(TECSGEN_COBJS) $(PLUGIN_COBJS) $(OTHER_OBJS)
	$(LD) -o $(TARGET) $(TECSGEN_COBJS) $(CELLTYPE_COBJS) $(PLUGIN_COBJS) $(OTHER_OBJS) $(LDFLAGS)
clean :
	rm -f $(CELLTYPE_COBJS) $(TECSGEN_COBJS) $(PLUGIN_COBJS) $(OTHER_OBJS) $(TARGET)  $(TIMESTAMP)
	rm -rf $(GEN_DIR)

tecs : $(TIMESTAMP)

$(TIMESTAMP) : $(TECS_IMPORTS)
	$(TECSGEN_EXE)  -k euc -R -D TECS -D TECS_CPP -I. -I./gen -I../../tecs_kernel -I../../include -I../../arch -I../.. -I../../kernel -I../../target/mindstorms_nxt_gcc -I../../tecs_lib/mindstorms_nxt -I../../arch/arm_gcc/common tSample.cdl
	touch $(TIMESTAMP)

# generic target for objs
$(_TECS_OBJ_DIR)%.o : %.c
	$(CC) -c $(CFLAGS) -o $@ $<

tTask.o : tTask.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tInitializeRoutine.o : tInitializeRoutine.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tTerminateRoutine.o : tTerminateRoutine.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tISR.o : tISR.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tConfigInterrupt.o : tConfigInterrupt.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tCyclicHandler.o : tCyclicHandler.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tCyclicTaskActivator.o : tCyclicTaskActivator.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tAlarmHandler.o : tAlarmHandler.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tSemaphore.o : tSemaphore.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tKernel.o : tKernel.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tTWIBody.o : tTWIBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tAVRBody.o : tAVRBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tMotor.o : tMotor.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tRotaryEncoderBody.o : tRotaryEncoderBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tSensorPort.o : tSensorPort.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tI2C.o : tI2C.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tLightSensorBody.o : tLightSensorBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tGyroSensorBody.o : tGyroSensorBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tTouchSensorBody.o : tTouchSensorBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tSonicSensorBody.o : tSonicSensorBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tSensorDriverBody.o : tSensorDriverBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tSPIBody.o : tSPIBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tLCD.o : tLCD.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tDisplayBody.o : tDisplayBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tButtonBody.o : tButtonBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tBattery.o : tBattery.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tSoundBody.o : tSoundBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tBluetoothBody.o : tBluetoothBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tConnectBluetooth.o : tConnectBluetooth.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tBalancerBody.o : tBalancerBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tCheckNXTButtonBody.o : tCheckNXTButtonBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tSIOPortMindstormsNXT.o : tSIOPortMindstormsNXT.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tPutLogMindstormsNXT.o : tPutLogMindstormsNXT.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tSerialPortMain.o : tSerialPortMain.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tSysLog.o : tSysLog.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tLogTaskMain.o : tLogTaskMain.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tPrintDisplayTaskBody.o : tPrintDisplayTaskBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tPIDControllerTaskBody.o : tPIDControllerTaskBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tTailControllerTaskBody.o : tTailControllerTaskBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tBalancerTaskBody.o : tBalancerTaskBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tLinetracerTaskBody.o : tLinetracerTaskBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tButtonSetTaskBody.o : tButtonSetTaskBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tGetLogTaskBody.o : tGetLogTaskBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tStarterTaskBody.o : tStarterTaskBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
tGetCommandTaskBody.o : tGetCommandTaskBody.c
	$(CC) -c $(CFLAGS) -o $@ $<
 
